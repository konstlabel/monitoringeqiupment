version: "3.8"  # Use Docker Compose file format 3.8

# SERVICES

services:

  # --------------------------------------------------------------------------
  # MySQL Database Service
  # --------------------------------------------------------------------------
  db:
    image: mysql:8.0                         # Use official MySQL 8 image
    container_name: monitoring-db            # Container name for easier reference
    restart: always                          # Always restart if container crashes

    # Set MySQL to use native password authentication
    command: --default-authentication-plugin=mysql_native_password

    # Environment variables for database setup
    environment:
      MYSQL_ROOT_PASSWORD: 23581321          # Root user password
      MYSQL_DATABASE: monitoringequipment    # Create database at startup
      MYSQL_USER: konstlabel                 # Create a user
      MYSQL_PASSWORD: 23581321               # Password for the user

    # Mount persistent volume for database data
    volumes:
      - db_data:/var/lib/mysql

    # Health check to wait for MySQL to be ready
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

    # Connect to custom network
    networks:
      - backend

  # --------------------------------------------------------------------------
  # Spring Boot Application Service
  # --------------------------------------------------------------------------
  app:
    build:
      context: .                             # Use current directory as build context
      dockerfile: Dockerfile                 # Use the specified Dockerfile
    image: monitoring-app:latest             # Name the built image
    container_name: monitoring-app
    restart: always

    # Wait for the database service to be healthy before starting
    depends_on:
      db:
        condition: service_healthy

    # Environment variables passed to the Spring Boot app
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/monitoringequipment?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: konstlabel
      SPRING_DATASOURCE_PASSWORD: 23581321

      SPRING_MVC_CORS_ALLOWED_ORIGINS: "*"
      SPRING_MVC_CORS_ALLOWED_METHODS: "GET,POST,PUT,DELETE,OPTIONS"
      SPRING_MVC_CORS_ALLOWED_HEADERS: "*"
      SPRING_MVC_CORS_ALLOW_CREDENTIALS: "true"

    # Connect to custom network
    networks:
      - backend

    # Map host port to container port (host:container)
    ports:
      - "53828:53828"

  # --------------------------------------------------------------------------
  # NGINX Reverse Proxy Service
  # --------------------------------------------------------------------------
  nginx:
    image: nginx:stable-alpine               # Lightweight, stable NGINX image
    container_name: monitoring-nginx
    restart: always

    # Wait for the app service to be available
    depends_on:
      - app

    # Map HTTP port from host to container
    ports:
      - "8080:80"                            # Expose NGINX on host port 8080

    # Mount the custom NGINX configuration file (read-only)
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro

    # Connect to custom network
    networks:
      - backend

# VOLUMES

volumes:
  db_data:  # Persistent volume for MySQL data

# NETWORKS

networks:
  backend:  # Isolated network for internal service communication
