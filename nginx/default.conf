# Define an upstream block named "app" pointing to the backend Spring Boot container
upstream app {
  server app:53828;
}

# Configure the HTTP server
server {
  listen 80;
  server_name _;

  # Security headers for all responses
  add_header X-Content-Type-Options "nosniff" always;
  add_header X-Frame-Options "DENY" always;
  add_header X-XSS-Protection "1; mode=block" always;

  # Block suspicious or unwanted requests
  location ~* (\.asp|\.php|/geoserver|/actuator|/cgi-bin) {
    deny all;
    return 403;
  }

  # Health check or root response
  location = / {
    proxy_pass http://app;  # Проксируем корневой путь к приложению
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Connection "";
  }

  # Proxy all requests starting with /api/ to the backend application
  location /api/ {
    proxy_pass http://app;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Connection "";
  }

  # Handle static files (if served by NGINX, optional)
  # location /static/ {
  #   alias /path/to/static/files;
  #   expires 1y;
  #   add_header Cache-Control "public, immutable";
  # }

  # Error handling
  error_page 404 /404.html;
  location = /404.html {
    return 404 "Not Found\n";
    add_header Content-Type text/plain;
  }

  # Log errors for debugging
  error_log /var/log/nginx/error.log warn;
}
